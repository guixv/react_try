{"version":3,"sources":["serviceWorker.js","App.js","detail.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","eventName","inputValue","list","id_list","cancelItem","cancelButton","voteNumber","cancelDiv","cancelIndex","react_default","a","createElement","id","onChange","handleInputChange","bind","value","react_router_dom","to","pathname","e","setState","target","React","Component","Thing","_this2","onClick","solvingClick","className","map","item","index","key","cancelButtonClicked","onMouseOver","onMouseAction","onMouseOut","offMouseAction","addAction","subAction","cancelEvent","backEvent","concat","toConsumableArray","console","log","splice","BasicRoute","react_router","exact","path","component","Detail","ReactDOM","render","router","document","getElementById","onbeforeunload","history","back","alert","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97cc1073.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Link} from 'react-router-dom';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventName: \"\",\n            inputValue: 'unnamed',\n            list: ['ii'],\n            id_list: 'list',\n            cancelItem: 'X',\n            cancelButton: 'cancelButton',\n            voteNumber: [1],\n            cancelDiv: \"cancelDiv\",\n            cancelIndex: 0\n        };\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>输入活动名称</h1>\n                <div id=\"nameInput\">\n                    <input\n                        onChange={this.handleInputChange.bind(this)}\n                        value={this.state.inputValue}\n                    />\n                    <Link to={{\n                        pathname: '/detail/',\n                        state: {eventName: this.state.inputValue}\n                    }}>\n\n                        <button>提交</button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            inputValue: e.target.value\n        });\n    }\n}\n\nexport default App;\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\nclass Thing extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            eventName:this.props.location.state.eventName,\r\n            inputValue:'unnamed',\r\n            list:['ii'],\r\n            id_list:'list',\r\n            cancelItem:'X',\r\n            cancelButton:'cancelButton',\r\n            voteNumber:[1],\r\n            cancelDiv:\"cancelDiv\",\r\n            cancelIndex:0\r\n        };\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>关于{this.state.eventName}的投票</h1>\r\n                <div id=\"nameInput\">\r\n                    <input\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                        value={this.state.inputValue}\r\n                    />\r\n                    <button onClick={this.solvingClick.bind(this)}>提交</button>\r\n                </div>\r\n                <div id={this.state.id_list}>\r\n                    <ul>\r\n                        <li>\r\n                            <strong className={this.state.cancelButton}>删除 </strong>\r\n                            <span className=\"name\">\r\n                            姓名\r\n                            </span>\r\n                            <span className=\"voteNumber\">\r\n                            选票\r\n                            </span>\r\n                            <span className=\"addVote\">\r\n                                加票\r\n                            </span>\r\n                            <span className=\"subVote\">\r\n                                减票\r\n                            </span>\r\n\r\n                        </li>\r\n                        {\r\n                            this.state.list.map((item,index)=>{\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <strong className={this.state.cancelButton}\r\n                                                onClick={this.cancelButtonClicked.bind(this,index)}\r\n                                                onMouseOver={this.onMouseAction.bind(this)}\r\n                                                onMouseOut={this.offMouseAction.bind(this)}\r\n                                        >\r\n                                            {this.state.cancelItem}\r\n                                        </strong>\r\n                                        <span className=\"name\">\r\n                                            {item}\r\n                                        </span>\r\n                                        <span className=\"voteNumber\">\r\n                                            {this.state.voteNumber[index]}\r\n                                        </span>\r\n                                        <span className=\"addVote\" onClick={this.addAction.bind(this,index)}>\r\n                                            +&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        </span>\r\n                                        <span className=\"subVote\" onClick={this.subAction.bind(this,index)}>\r\n                                            -&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        </span>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    <div id={this.state.cancelDiv}>\r\n                        <strong>\r\n                            确认删除{this.state.list[this.state.cancelIndex]}?<br/>\r\n                        </strong>\r\n                        <button onClick={this.cancelEvent.bind(this)} >确认</button>\r\n                        <button onClick={this.backEvent.bind(this)}>取消</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleInputChange(e){\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        });\r\n    }\r\n\r\n    solvingClick(){\r\n        this.setState({\r\n            list:[...this.state.list,this.state.inputValue],\r\n            voteNumber:[...this.state.voteNumber,0],\r\n            inputValue:''\r\n        });\r\n        console.log(this.state.voteNumber)\r\n    }\r\n\r\n    cancelButtonClicked(index){\r\n        this.setState({\r\n            cancelDiv:\"cancelDivDisplay\",\r\n            cancelIndex:index\r\n        })\r\n    }\r\n\r\n    cancelEvent(){\r\n        const list=[...this.state.list];\r\n        const voteNumber=[...this.state.voteNumber];\r\n        voteNumber.splice(this.state.cancelIndex,1);\r\n        list.splice(this.state.cancelIndex,1);\r\n        this.setState({\r\n            cancelDiv:\"cancelDiv\",\r\n            list:list,\r\n            voteNumber:voteNumber\r\n        })\r\n    }\r\n\r\n    backEvent(){\r\n        this.setState({\r\n            cancelDiv:\"cancelDiv\"\r\n        })\r\n    }\r\n\r\n    onMouseAction(){\r\n        this.setState({\r\n            cancelItem:'o'\r\n        })\r\n    }\r\n\r\n    offMouseAction(){\r\n        this.setState({\r\n            cancelItem:'X'\r\n        })\r\n    }\r\n\r\n    addAction(index){\r\n        const voteNumber=[...this.state.voteNumber];\r\n        voteNumber[index]++;\r\n        this.setState({\r\n            voteNumber:voteNumber\r\n        })\r\n    }\r\n\r\n    subAction(index){\r\n        const voteNumber=[...this.state.voteNumber];\r\n        if(voteNumber[index]>0)\r\n            voteNumber[index]--;\r\n        this.setState({\r\n            voteNumber:voteNumber\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Thing;\r\n","import React from 'react';\r\nimport {HashRouter,Route,Switch} from 'react-router-dom';\r\nimport App from './App';\r\nimport Detail from './detail';\r\n\r\nconst BasicRoute =()=>(\r\n\r\n    <HashRouter>\r\n        <Switch>\r\n           <Route exact path=\"/\" component={App}/>\r\n           <Route exact path=\"/detail\" component={Detail}/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\nexport default BasicRoute;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nwindow.onbeforeunload=function () {\n    window.history.back();\n    alert('yes');\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}